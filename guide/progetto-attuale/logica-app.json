{
  "projectName": "Fantavega - Fantacalcio Auction System",
  "last_task_completed": {
    "last_update": "2025-01-20T09:30:00Z",
    "task_completed": "Bug Fix - Auto-Bid Calculation Logic Complete Rewrite",
    "feature_logic": {
      "feature_name": "Fix Auto-Bid Calculation Logic - eBay-Style Implementation",
      "summary": "Risolve completamente il bug critico nel calcolo degli auto-bid. Implementa la logica 'serie di rilanci manuali automatici' conforme agli standard eBay. Il problema principale era che il sistema usava importi auto-bid invece di offerte manuali per i calcoli, causando prezzi finali errati.",
      "architectural_pattern": "Pattern 'Serie di Rilanci Manuali Automatici': implementa la logica eBay dove ogni auto-bid e trattato come una sequenza di rilanci manuali automatici. Questo semplifica enormemente la logica e garantisce risultati corretti in tutti gli scenari.",
      "user_flow": [
        "1. Utente con auto-bid attivo fa un'offerta manuale su un giocatore.",
        "2. Sistema rileva auto-bid competitivi di altri utenti per lo stesso giocatore.",
        "3. Sistema simula una 'battaglia di rilanci automatici' tra tutti gli auto-bid.",
        "4. Logica: chi ha auto-bid piu alto vince, pagando max del secondo + 1.",
        "5. In caso di parita, vince chi ha fatto l'offerta iniziale al suo importo massimo.",
        "6. Sistema aggiorna asta con vincitore e prezzo finale corretto.",
        "7. Notifiche real-time inviate a tutti i partecipanti interessati."
      ],
      "core_components_interaction": {
        "src/lib/db/services/bid.service.ts": "Servizio principale completamente riscritto con logica 'serie di rilanci automatici'. Linee 577-645 implementano la nuova logica eBay-style.",
        "placeBidOnExistingAuction()": "Funzione principale che gestisce auto-bid vs auto-bid con logica semplificata: trova auto-bid piu alto, calcola prezzo finale come max_perdente + 1.",
        "Auto-bid Competition Logic": "Sistema confronta auto-bid massimi, determina vincitore, calcola prezzo finale. In parita vince primo offerente al suo massimo.",
        "Credit Management": "Gestione corretta dei crediti bloccati usando effectiveBidAmount per sbloccare e finalBidAmount per bloccare al vincitore.",
        "Real-time Notifications": "Notifiche Socket.IO per aggiornamenti asta, offerte superate, e attivazioni auto-bid con dati corretti."
      },
      "database_interactions": [
        {
          "table": "auctions",
          "operation": "SELECT + UPDATE",
          "description": "Operazioni di offerta che possono generare errori gestiti dal nuovo error handler."
        },
        {
          "table": "league_participants",
          "operation": "SELECT + UPDATE", 
          "description": "Controlli budget e locked_credits che possono fallire e richiedere error handling."
        }
      ],
      "real_time_features": [
        {
          "event": "error_handling",
          "trigger": "Errore durante operazioni di offerta",
          "data": "Error details con null safety",
          "ui_response": "Toast error message invece di crash applicazione"
        }
      ]
    },
    "bug_details": {
      "original_issue": "Auto-bid system calcolava prezzi finali errati in scenari auto-bid vs auto-bid. Esempio: offerta manuale 33 crediti risultava in prezzo finale 31 invece di 34.",
      "root_cause": "Logica auto-bid usava importi auto-bid invece di offerte manuali per calcoli. Sistema non implementava correttamente la logica eBay di 'rilanci automatici sequenziali'.",
      "error_manifestation": [
        "Prezzi finali asta incorretti (troppo bassi)",
        "Utenti vincevano aste pagando meno del dovuto",
        "Violazione principi eBay-style auction",
        "Gestione crediti bloccati inconsistente"
      ],
      "technical_cause": "Algoritmo auto-bid confrontava max_amount degli auto-bid invece di simulare rilanci sequenziali partendo dall'offerta manuale."
    },
    "solution_implemented": [
      "Riscritta completamente logica auto-bid con approccio 'serie di rilanci manuali automatici'",
      "Implementato confronto diretto tra auto-bid massimi per determinare vincitore",
      "Calcolo prezzo finale: vincitore paga max_amount del perdente + 1 (o suo massimo in caso di parita)",
      "Gestione corretta caso parita: primo offerente vince al suo importo massimo",
      "Correzione gestione crediti bloccati con importi effettivi corretti",
      "Aggiornamento logging per tracciare nuova logica di calcolo"
    ],
    "files_modified": [
      "src/lib/db/services/bid.service.ts: Riscritta logica auto-bid (linee 577-645) con implementazione eBay-style",
      "bugfix.md: Documentazione completa del bug e della soluzione implementata"
    ]
  }
}